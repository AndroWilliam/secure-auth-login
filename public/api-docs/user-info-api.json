{
  "openapi": "3.0.0",
  "info": {
    "title": "User Info API",
    "description": "Centralized API for storing and retrieving user interaction data with secure hashing and authentication",
    "version": "1.0.0",
    "contact": {
      "name": "API Support",
      "email": "support@example.com"
    }
  },
  "servers": [
    {
      "url": "/api",
      "description": "Production server"
    }
  ],
  "security": [
    {
      "BearerAuth": []
    }
  ],
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "UserInfoEvent": {
        "type": "object",
        "required": ["event_type", "event_data"],
        "properties": {
          "event_type": {
            "type": "string",
            "enum": [
              "signup_identity_completed",
              "signup_security_completed",
              "signup_completed",
              "login_attempt",
              "login_success",
              "login_failed",
              "security_questions_verified",
              "device_verified",
              "location_verified",
              "login_session_completed"
            ],
            "description": "Type of user interaction event"
          },
          "event_data": {
            "type": "object",
            "description": "Event-specific data payload"
          }
        }
      },
      "StoredEvent": {
        "type": "object",
        "properties": {
          "event_id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique event identifier"
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "description": "User identifier from Supabase auth"
          },
          "event_type": {
            "type": "string",
            "description": "Type of user interaction event"
          },
          "event_data": {
            "type": "object",
            "description": "Event-specific data payload"
          },
          "hashed_data": {
            "type": "object",
            "description": "Hashed sensitive data (passwords, OTPs, etc.)"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Event creation timestamp"
          }
        }
      },
      "SecurityScore": {
        "type": "object",
        "properties": {
          "total_score": {
            "type": "integer",
            "minimum": 0,
            "maximum": 100,
            "description": "Total security score out of 100"
          },
          "breakdown": {
            "type": "object",
            "properties": {
              "credentials": {
                "type": "integer",
                "description": "Points for valid credentials (25 max)"
              },
              "device": {
                "type": "integer",
                "description": "Points for device verification (25 max)"
              },
              "location": {
                "type": "integer",
                "description": "Points for location verification (25 max)"
              },
              "security_questions": {
                "type": "integer",
                "description": "Points for security questions (25 max)"
              }
            }
          }
        }
      },
      "VerificationRequest": {
        "type": "object",
        "required": ["event_type", "verification_data"],
        "properties": {
          "event_type": {
            "type": "string",
            "description": "Type of event to verify against"
          },
          "verification_data": {
            "type": "object",
            "description": "Data to verify (will be hashed and compared)"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "Error message"
          },
          "code": {
            "type": "string",
            "description": "Error code"
          }
        }
      }
    }
  },
  "paths": {
    "/user-info": {
      "post": {
        "summary": "Store user interaction event",
        "description": "Store a new user interaction event with automatic hashing of sensitive data",
        "tags": ["User Events"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserInfoEvent"
              },
              "examples": {
                "signup_completed": {
                  "summary": "Signup completion event",
                  "value": {
                    "event_type": "signup_completed",
                    "event_data": {
                      "email": "user@example.com",
                      "timestamp": "2024-01-01T12:00:00Z"
                    }
                  }
                },
                "login_attempt": {
                  "summary": "Login attempt event",
                  "value": {
                    "event_type": "login_attempt",
                    "event_data": {
                      "email": "user@example.com",
                      "method": "password",
                      "deviceInfo": {
                        "fingerprint": "abc123",
                        "browser": "Chrome",
                        "os": "macOS"
                      },
                      "timestamp": "2024-01-01T12:00:00Z"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Event stored successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "event_id": {
                      "type": "string",
                      "format": "uuid"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Retrieve user events",
        "description": "Get user interaction events with optional filtering",
        "tags": ["User Events"],
        "parameters": [
          {
            "name": "event_type",
            "in": "query",
            "description": "Filter by event type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of events to return",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 50
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Number of events to skip",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Events retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "events": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/StoredEvent"
                      }
                    },
                    "total": {
                      "type": "integer",
                      "description": "Total number of events for the user"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/user-info/verify": {
      "post": {
        "summary": "Verify user data",
        "description": "Verify user-provided data against stored hashed values",
        "tags": ["Verification"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerificationRequest"
              },
              "examples": {
                "password_verification": {
                  "summary": "Verify password",
                  "value": {
                    "event_type": "login_attempt",
                    "verification_data": {
                      "password": "user_password"
                    }
                  }
                },
                "security_question": {
                  "summary": "Verify security question answer",
                  "value": {
                    "event_type": "security_questions_verified",
                    "verification_data": {
                      "answer": "fluffy"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Verification result",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "verified": {
                      "type": "boolean",
                      "description": "Whether the verification was successful"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid verification request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/user-info/security-score": {
      "get": {
        "summary": "Get user security score",
        "description": "Calculate and return the user's current security score based on completed verifications",
        "tags": ["Security"],
        "responses": {
          "200": {
            "description": "Security score calculated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SecurityScore"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "User Events",
      "description": "Operations for storing and retrieving user interaction events"
    },
    {
      "name": "Verification",
      "description": "Operations for verifying user data against stored values"
    },
    {
      "name": "Security",
      "description": "Security-related operations and scoring"
    }
  ]
}
